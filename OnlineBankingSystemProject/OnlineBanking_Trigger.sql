-- TRIGGER 1: Ngay sinh KH phai be hon ngay mo TK
CREATE OR REPLACE TRIGGER TRG_DOB_OPENACCOUNT_CUSTOMER
AFTER UPDATE OF DATE_OF_BIRTH ON CUSTOMER
FOR EACH ROW
DECLARE
    V_OPEN_DATE ACCOUNT.OPEN_DAY%TYPE;
    V_ACCOUNT_ID ACCOUNT.ACCOUNT_ID%TYPE;
    
    CURSOR C_ACCOUNT IS 
        SELECT ACCOUNT_ID
        FROM ACCOUNT
        WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID;
BEGIN
    OPEN C_ACCOUNT;
    LOOP
        FETCH C_ACCOUNT INTO V_ACCOUNT_ID;
        EXIT WHEN C_ACCOUNT%NOTFOUND;
        
        SELECT OPEN_DAY INTO V_OPEN_DATE
        FROM ACCOUNT
        WHERE ACCOUNT_ID = V_ACCOUNT_ID;
        
        IF(:NEW.DATE_OF_BIRTH > V_OPEN_DATE) THEN
            RAISE_APPLICATION_ERROR(-20000, 'Ngay sinh KH phai be hon ngay mo TK');
        END IF;
    END LOOP;
    CLOSE C_ACCOUNT;
    DBMS_OUTPUT.PUT_LINE('Update thanh cong');
END;
--Test
UPDATE CUSTOMER
SET DATE_OF_BIRTH = TO_DATE('11/8/2001', 'dd/mm/yyyy')
WHERE CUSTOMER_ID = 10952001;
commit;

-- Ngày thanh toan hoa don dich vu phai lon hon ngay ki hop dong cua nha cung cap dich vu do
CREATE OR REPLACE TRIGGER TRG_PAYMENT_DATE_BILL
AFTER INSERT OR UPDATE ON BILL
FOR EACH ROW
DECLARE
    V_CONTRACT_SIGNING_DATE SUPPLIER.CONTRACT_SIGNING_DATE%TYPE;
BEGIN
    SELECT CONTRACT_SIGNING_DATE INTO V_CONTRACT_SIGNING_DATE
    FROM SUPPLIER
    WHERE SUPPLIER_ID = :NEW.SUPPLIER_ID;
    
    IF(V_CONTRACT_SIGNING_DATE > :NEW.PAYMENT_DATE)
    THEN 
        RAISE_APPLICATION_ERROR(-20090, 'Ngay thanh toan hoa don dich vu phai lon hon ngay ki hop dong cua nha cung cap dich vu do.');
    END IF;
END;
--Test
INSERT INTO BILL VALUES(152016, 1011, 10952007, 250000, TO_DATE('01/04/2020','dd/MM/yyyy'), TO_DATE('01/04/1900','dd/MM/yyyy'), 'Paid' );   

CREATE OR REPLACE TRIGGER TRG_PAYMENT_DATE_SUPPLIER
AFTER UPDATE OF CONTRACT_SIGNING_DATE ON SUPPLIER
FOR EACH ROW
DECLARE
    CURSOR C_BILL IS 
        SELECT PAYMENT_DATE
        FROM BILL
        WHERE SUPPLIER_ID = :NEW.SUPPLIER_ID;
BEGIN
    FOR v_payment_date IN C_BILL
    LOOP
        IF(v_payment_date.PAYMENT_DATE < :NEW.CONTRACT_SIGNING_DATE)
        THEN
            RAISE_APPLICATION_ERROR(-20090, 'Ngay thanh toan hoa don dich vu phai lon hon ngay ki hop dong cua nha cung cap dich vu do.');
        END IF;
    END LOOP;
END;
--Test
UPDATE SUPPLIER
SET CONTRACT_SIGNING_DATE = SYSDATE
WHERE SUPPLIER_ID = 1011
select * from bill
INSERT INTO BILL VALUES(152015, 1011, 10952004, 250000, TO_DATE('01/04/2020','dd/MM/yyyy'), TO_DATE('01/04/2020','dd/MM/yyyy'), 'Paid' );   

-- Tu dong viet hoa ho va ten khach hang khi them khach hang
CREATE OR REPLACE TRIGGER TRG_INITCAP_CUSTOMER_NAME
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
BEGIN
    :NEW.FIRST_NAME := INITCAP(:NEW.FIRST_NAME);
    :NEW.LAST_NAME := INITCAP(:NEW.LAST_NAME);
END; 

-- Moi thang, nha cung cap chi co the them duy nhat 1 hoa don cho moi khach hang cua ho.
CREATE OR REPLACE TRIGGER TRG_ONLY_ONE_BILL_A_MONTH
BEFORE INSERT OR UPDATE OF SUPPLIER_ID, CUSTOMER_ID ON BILL
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    number_of_bill NUMBER;
BEGIN
    SELECT COUNT(BILL_ID) INTO number_of_bill
    FROM BILL
    WHERE SUPPLIER_ID = :NEW.SUPPLIER_ID
    AND CUSTOMER_ID = :NEW.CUSTOMER_ID
    AND EXTRACT(MONTH FROM INVOICE_DATE) = EXTRACT(MONTH FROM :NEW.INVOICE_DATE)
    AND EXTRACT(YEAR FROM INVOICE_DATE) = EXTRACT(YEAR FROM :NEW.INVOICE_DATE);
    
    IF(number_of_bill > 0) 
    THEN
        RAISE_APPLICATION_ERROR(-20122, 'Moi thang, nha cung cap chi co the them duy nhat 1 hoa don cho moi khach hang cua ho');
        COMMIT;
    END IF;
END;
COMMIT;
--Moi khach hang chi co 1 tai khoan thanh toan
CREATE OR REPLACE TRIGGER TRG_JUST_ONE_PAYMENT_ACCOUNT
BEFORE INSERT OR UPDATE OF CUSTOMER_ID ON ACCOUNT
FOR EACH ROW 
WHEN (NEW.ACCOUNT_TYPE_ID = 'PA')
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    NUMBER_OF_PAYMENT_ACCOUNT INT;
BEGIN
    SELECT COUNT(ACCOUNT_ID) INTO NUMBER_OF_PAYMENT_ACCOUNT
    FROM ACCOUNT
    WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID
    AND ACCOUNT_TYPE_ID = 'PA';
    
    IF(NUMBER_OF_PAYMENT_ACCOUNT > 0) THEN
        RAISE_APPLICATION_ERROR(-20000, 'Moi khach hang chi co the co duy nhat 1 tai khoan thanh toan');
        COMMIT;
    END IF;
END;
--Test  
INSERT INTO ACCOUNT VALUES(2012030, 'PA', 13000000, TO_DATE('25/12/2020','dd/MM/yyyy'), NULL , NULL, 'Active', 10952006); 
UPDATE ACCOUNT
SET CUSTOMER_ID = 10952001 
WHERE ACCOUNT_ID = 2012002;
SELECT * FROM ACCOUNT
UPDATE ACCOUNT
SET CURRENT_BALANCE = 5
WHERE ACCOUNT_ID = 20120; 

-- Them userlogin cho cusstomer 
CREATE OR REPLACE TRIGGER TRG_ADD_USERLOGIN_FOR_CUSTOMER 
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    Next_UserLogin_ID USER_LOGIN.USERLOGIN_ID%TYPE;
BEGIN
    Next_UserLogin_ID := UserLoginID_Sequence.nextval;
    
    INSERT INTO USER_LOGIN
    VALUES(Next_UserLogin_ID, :NEW.Phone_Number, DBMS_RANDOM.string('x',10), 'Customer', 0, NULL);
    
    :NEW.USERLOGIN_ID := Next_UserLogin_ID;
    
    COMMIT;
END;

-- 
CREATE OR REPLACE TRIGGER TRG_REVENUE_CUSTOMER
AFTER INSERT OR UPDATE OR DELETE ON TRANSACTION
FOR EACH ROW
DECLARE
    V_CUSTOMER_ID CUSTOMER.CUSTOMER_ID%TYPE;
    V_NEW_TRANSACTION_FEE TRANSACTION_TYPE.FEE%TYPE;
    V_OLD_TRANSACTION_FEE TRANSACTION_TYPE.FEE%TYPE;
BEGIN
    IF INSERTING THEN
        SELECT CUSTOMER_ID INTO V_CUSTOMER_ID
        FROM ACCOUNT
        WHERE ACCOUNT_ID = :NEW.ACCOUNT_ID;
    
        SELECT FEE INTO V_NEW_TRANSACTION_FEE
        FROM TRANSACTION_TYPE
        WHERE TRANSACTION_TYPE_ID = :NEW.TRANSACTION_TYPE_ID;
        
        UPDATE CUSTOMER
        SET REVENUE = REVENUE + V_NEW_TRANSACTION_FEE
        WHERE CUSTOMER_ID = V_CUSTOMER_ID;
    END IF;
    
    IF DELETING THEN
        SELECT CUSTOMER_ID INTO V_CUSTOMER_ID
        FROM ACCOUNT
        WHERE ACCOUNT_ID = :OLD.ACCOUNT_ID;
    
        SELECT FEE INTO V_OLD_TRANSACTION_FEE
        FROM TRANSACTION_TYPE
        WHERE TRANSACTION_TYPE_ID = :OLD.TRANSACTION_TYPE_ID;
        
        UPDATE CUSTOMER
        SET REVENUE = REVENUE - V_OLD_TRANSACTION_FEE
        WHERE CUSTOMER_ID = V_CUSTOMER_ID;
    END IF;
    
    IF UPDATING THEN 
        SELECT CUSTOMER_ID INTO V_CUSTOMER_ID
        FROM ACCOUNT
        WHERE ACCOUNT_ID = :OLD.ACCOUNT_ID;
    
        SELECT FEE INTO V_OLD_TRANSACTION_FEE
        FROM TRANSACTION_TYPE
        WHERE TRANSACTION_TYPE_ID = :OLD.TRANSACTION_TYPE_ID;
        
        SELECT FEE INTO V_NEW_TRANSACTION_FEE
        FROM TRANSACTION_TYPE
        WHERE TRANSACTION_TYPE_ID = :NEW.TRANSACTION_TYPE_ID;
        
        UPDATE CUSTOMER
        SET REVENUE = REVENUE - V_OLD_TRANSACTION_FEE + V_NEW_TRANSACTION_FEE
        WHERE CUSTOMER_ID = V_CUSTOMER_ID;
    END IF;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20032, 'Ma loai giao dich khong hop le');
END;

--The customer's username must be the customer's phone number.
CREATE OR REPLACE TRIGGER TRG_USERNAME_PHONENUMBER_CUSTOMER
AFTER UPDATE OF PHONE_NUMBER ON CUSTOMER
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
    V_USERLOGIN_ID USER_LOGIN.USERLOGIN_ID%TYPE;
BEGIN
    SELECT USERLOGIN_ID INTO V_USERLOGIN_ID
    FROM CUSTOMER
    WHERE CUSTOMER_ID = :NEW.CUSTOMER_ID;
    
    UPDATE USER_LOGIN
    SET USERNAME = :NEW.PHONE_NUMBER
    WHERE USERLOGIN_ID = V_USERLOGIN_ID;
    COMMIT;
END;

COMMIT;
